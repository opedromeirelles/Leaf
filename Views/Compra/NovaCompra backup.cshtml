@model Leaf.Models.Domain.Compra

@{
    ViewData["Title"] = "Nova Compra";
}

@if (TempData["MensagemErro"] != null)
{
    <span id="eventoErro">@TempData["MensagemErro"]</span>
}
else if (TempData["MensagemSucesso"] != null)
{
    <span id="eventoSucesso">@TempData["MensagemSucesso"]</span>
}

<div class="paginaPadrao">
    <h2 class="h2tituloCadastro">Nova Ordem de Compra</h2>

    <form asp-action="Emitir" asp-controller="Compra" method="post" id="formCadastroCompra">
       
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @await Html.PartialAsync("PartialView/BuscarInsumo")
                </div>

            </div>

            <div class="col-md-6">
                <div class="form-group">
                   @await Html.PartialAsync("PartialView/BuscarPessoa")
                </div>
            </div>
        </div>

        <input type="text" id="idUsuario" name="IdUsuario" hidden />
       

        <div class="btnsControles mt-4">
            <button type="submit" name="action" value="salvar" class="btn btn-success" id="btnSubmit" disabled>CONFIRMAR</button>
            <a href="@Url.Action("Index", "Compra")" class="btn btn-danger">DESCARTAR</a>
        </div>
    </form>
</div>

<!-- Referências ao Bootstrap e jQuery -->
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

<!-- Rotinas em AJAX-->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/js/validacao.js"></script>
<script>

    // principais ids para controle:

    // idPessoa
    // btnModalInsumo   - botao clicar para abrir o modal
    // pessoaVinculada  - label do nome da pessoa dentro do modal
    // inputBuscaInsumo - input de busca do modal
    // btnBuscaInsumo   - btn de buscar dentro do modal
    // btnLimparBusca   - btn de limpar os dados dentro do modal
    // listaInsumo      - tbody dentro do modal (tag do corpo da minha lista)
    // mensagemControle - span dentro da lista para mensagens de controle
    // btnDispensar     - btn de dispensar dentro do modal (fechar ele ou desistir)
    // btnConcluir      - btn de confirmação dentro do modal (concluir a lista)


    $(document).ready(function () {

        // Importando Função para validar pessoa
        iniciarValidacaoPessoa(
            'btnSubmit',          // ID do botão de confirmação
            'inpCnpj',            // ID do campo CNPJ
            'btnValidarCnpj',     // ID do botão de validação
            'spnValidacao',       // ID do label de validação
            'spnPessoaNome',      // ID do label de nome da pessoa
            'idPessoa'            // ID do campo oculto para armazenar o ID da pessoa
        );

        // Sobrescreva a URL para a validação específica de Pessoa para validação
        $.ajaxSetup({
            url: '/Pessoa/ValidarPessoa'
        });

        // Variáveis de controle para manter o estado
        var idPessoa = 0;
        var listaPreenchida = false;
        var pessoaValidada = false;

        // Função Mapear lista de insumos e listar na tabela
        function exibirInsumos(insumos, listaElementoId, mensagemElementoId) {
            // Verifica se a lista está vazia
            if (insumos.length === 0) {
                $(`#${mensagemElementoId}`).html('<div class="alert alert-warning text-center">Nenhum insumo encontrado.</div>');
                return;
            }

            // Limpa a mensagem e a lista antes de popular
            $(`#${mensagemElementoId}`).html('');
            $(`#${listaElementoId}`).html('');

            // Popula a tabela com os insumos
            $.each(insumos, function (index, insumo) {
                $(`#${listaElementoId}`).append(`
                            <tr>
                                <td>${insumo.descricao}</td>
                                <td>R$ ${insumo.valorUnitario}</td>
                                <td><input type="number" class="w-50" id="idQuantidade_${index}" /></td>
                                <td>${insumo.pessoa?.nome ?? '-'}</td>
                                <td><a href="#" id="adicionarInsumo_${index}" class="btn btn-primary w-70">Adicionar</a></td>
                            </tr>
                    `);
                listaPreenchida = true;
            });
        }



        // Monitorar alterações no campo de CNPJ para emitir alertas
        $('#inpCnpj').on('input', function () {
            if (pessoaValidada && listaPreenchida) {
                var confirmar = confirm("Trocar o CNPJ irá remover os itens da lista. Deseja continuar?");
                if (confirmar) {
                    // Se o usuário confirmou a alteração, limpar os campos e resetar as variáveis
                    idPessoa = 0;
                    listaPreenchida = false;
                    pessoaValidada = false;
                    $('#listaInsumo').html('');  // Limpar a lista de insumos
                    $('#mensagemControle').html('');  // Limpar mensagens de controle
                    $('#pessoaVinculada').html('');  // Limpar a exibição de pessoa vinculada
                    $('#idPessoa').val('');  // Resetar ID da pessoa
                } else {
                    // Caso o usuário não deseje continuar, restaura o CNPJ anterior
                    $(this).val($('#idPessoa').data('cnpjAtual'));
                    
                    $('#spnValidacao').text('Pessoa verificada.').removeClass('text-danger').addClass('text-success');
                    
                    $('#spnPessoaNome').html(`Nome: ${pessoa.nome}`);
                    $btnSubmit.prop('disabled', false);
                }
            }
        });

        // Rotina de listar produtos já com a pessoa preenchida - case 1:
        $('#btnModalInsumo').click(function () {
            var nomePessoa = $('#spnPessoaNome').text();

            // Verifica se o campo CNPJ está vazio
            if ($('#inpCnpj').val().trim() === "") {
                idPessoa = 0;
                $('#pessoaVinculada').html('');

                listarInsumosPessoa()

            } else {
                idPessoa = $('#idPessoa').val();
                $('#pessoaVinculada').html(`<br>${nomePessoa}`);
                $('#idPessoa').data('cnpjAtual', $('#inpCnpj').val());
                pessoaValidada = true;  // Define a pessoa como validada

                listarInsumosPessoa()
            }

            // Se já temos um CNPJ válido, exibir a lista de insumos para essa pessoa
            if (idPessoa != 0) {
                listarInsumosPessoa();
            }
        });

        // Função para listar insumos
        function listarInsumosPessoa() {

            // Limpar todos os elementos antes de popular
            $('#listaInsumo').html('');
            $('#mensagemControle').html('');

            // Acionar a action de listar insumos para a pessoa
            $.ajax({
                url: '/Compra/ListarInsumos',
                type: 'GET',
                data: { idPessoa: idPessoa },
                dataType: 'json',

                success: function (insumos) {
                    exibirInsumos(insumos, 'listaInsumo', 'mensagemControle');
                },
                error: function () {
                    $('#listaInsumo').html('');
                    $('#mensagemControle').html('<div class="alert alert-warning">Erro ao consultar insumos.</div>');
                }
            });
        }

        // Busca dentro do modal já aberto
        $('#btnBuscaInsumo').click(function () {
            // Pega a descrição
            var descricao = $('#inputBuscaInsumo').val();

            $.ajax({
                url: '/Compra/ListarInsumoPessoa',
                type: 'GET',
                data: { idPessoa: idPessoa, descricao: descricao },
                dataType: 'json',

                success: function (insumos) {
                    $('#listaInsumo').html('');
                    exibirInsumos(insumos, 'listaInsumo', 'mensagemControle');
                },
                error: function () {
                    $('#listaInsumo').html('');
                    $('#mensagemControle').html('<div class="alert alert-warning">Erro ao consultar insumos filtrado</div>');
                }
            });
        });

        // Limpar busca dentro do modal já aberto
        $('#btnLimparBusca').click(function () {
            $('#inputBuscaInsumo').val('');
            listarInsumosPessoa();
        });

    });
</script>

