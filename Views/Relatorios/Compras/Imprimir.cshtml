@model IEnumerable<Leaf.Models.ViewModels.CompraViewModel>
@{
    Layout = "_LayoutImpressao";
    ViewData["Title"] = "Impressão de Relatório de Compras";

    // Define as variáveis para data de início e fim com base nos ViewBags
    DateTime? dataInicio = !string.IsNullOrEmpty(ViewBag.DataInicio) ? DateTime.Parse(ViewBag.DataInicio) : (DateTime?)null;
    DateTime? dataFim = !string.IsNullOrEmpty(ViewBag.DataFim) ? DateTime.Parse(ViewBag.DataFim) : DateTime.Now;

    string filtroData = "";

    if (dataInicio.HasValue && dataFim.HasValue)
    {
        filtroData = $"Data Início: {dataInicio.Value.ToString("dd/MM/yyyy")} até a data: {dataFim.Value.ToString("dd/MM/yyyy")}";
    }
    else if (dataInicio.HasValue && !dataFim.HasValue)
    {
        filtroData = $"Data Início: {dataInicio.Value.ToString("dd/MM/yyyy")} até data Atual";
    }
    else if (!dataInicio.HasValue && !dataFim.HasValue)
    {
        filtroData = "Pedidos em todo o período";
    }
}

<div class="container mt-5 mr-5">
    <div class="row">
        <!-- Cabeçalho com logo, título, e informações do usuário -->
        <div class="col-4">
            <img src="~/imgs/icons/png/logo300px-preto.png" alt="Logo" style="max-height: 100px;" />
        </div>
        <div class="col-4 text-center">
            <h2>Relatório de Compras</h2>
            <p>Data de Impressão: @DateTime.Now.ToString("dd/MM/yyyy HH:mm")</p>
        </div>
        <div class="col-4 text-right">
            <p>Usuário: @User?.Identity?.Name</p>
            <div id="componenteImpressao" class="d-print-none">
                <a href="@Url.Action("Index", "RelatorioCompras")" class="btn btn-secondary">Retornar</a>
                <button class="btn btn-primary" onclick="imprimirRelatorio()">Imprimir</button>
            </div>
        </div>
    </div>

    <hr />

    <!-- Informações dos filtros aplicados -->
    <div class="row mb-3">
        <h5>Filtros Aplicados:</h5>
        <ul class="ml-3">
            @{
                bool algumFiltro = false;

                if (!string.IsNullOrEmpty(ViewBag.NumeroCompra))
                {
                    <li><strong>Número da Compra:</strong> @ViewBag.NumeroCompra</li>
                    algumFiltro = true;
                }
                if (string.IsNullOrEmpty(ViewBag.NumeroCompra))
                {
                    if (!string.IsNullOrEmpty(ViewBag.Status))
                    {
                        <li><strong>Status:</strong> @ViewBag.Status</li>
                        algumFiltro = true;
                    }
                    if (!string.IsNullOrEmpty(ViewBag.Fornecedor) && ViewBag.Fornecedor != "0")
                    {
                        <li><strong>Fornecedor:</strong> @ViewBag.Fornecedor - @ViewBag.NomeFornecedor</li>
                        algumFiltro = true;
                    }
                    if (!string.IsNullOrEmpty(ViewBag.Solicitante) && ViewBag.Solicitante != "0")
                    {
                        <li><strong>Solicitante:</strong> @ViewBag.Solicitante - @ViewBag.NomeSolicitante</li>
                        algumFiltro = true;
                    }
                    if (!string.IsNullOrEmpty(filtroData) && filtroData != "Pedidos em todo o período")
                    {
                        <li><strong>@filtroData</strong></li>
                        algumFiltro = true;
                    }
                }
                
                if (!algumFiltro)
                {
                    <li>Nenhum filtro aplicado</li>
                }
            }
        </ul>
    </div>

    <!-- Tabela dos pedidos -->
    <div class="table-responsive mt-3">
        <table class="table table-hover table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th scope="col" class="text-center">Nº Compra</th>
                    <th scope="col">Fornecedor</th>
                    <th scope="col">Solicitante</th>
                    <th scope="col" class="text-center">Total de Itens</th>
                    <th scope="col" class="text-center">Valor Total</th>
                    <th scope="col" class="text-center">Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var compra in Model)
                {
                    <tr>
                        <td class="text-center">@compra.IdCompra</td>
                        <td>@(compra.Fornecedor != null ? compra.Fornecedor.Nome + " / " + compra.Fornecedor.Cnpj : "Fornecedor não associado")</td>
                        <td>@(compra.Administrativo != null ? compra.Administrativo.Nome : "Solicitante não associado")</td>
                        <td class ="text-center">@(compra.ItensCompra != null ? compra.ItensCompra.Count : 0)</td>
                        <td class="text-center">R$ @(compra.ItensCompra != null ? compra.ItensCompra.Sum(item => item.SubTotal).ToString("#,##0.00") : "0,00")</td>
                        <td class="text-center">
                            @{
                                var status = compra?.Compra?.Status ?? "Indefinido";
                                string statusClass = status switch
                                {
                                    "EM" => "text-primary",
                                    "BX" => "text-success",
                                    "CA" => "text-danger",
                                    _ => ""
                                };
                            }
                            <span class="@statusClass">@status</span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Rodapé -->
    <div class="text-right mt-4">
        <p><strong>Total de Pedidos:</strong> @Model.Count()</p>
        <p><strong>Valor Total de Todos os Pedidos:</strong> R$ @Model.Sum(x => x.ItensCompra?.Sum(i => i.SubTotal) ?? 0).ToString("#,##0.00")</p>
    </div>
</div>

<script>
    function imprimirRelatorio() {
        // Esconde os elementos não desejados na impressão
        document.getElementById('componenteImpressao').style.display = 'none';

        // Chama a função de impressão
        window.print();

        // Mostra novamente após a impressão
        setTimeout(function () {
            document.getElementById('componenteImpressao').style.display = 'block';
        }, 1000);
    }
</script>
